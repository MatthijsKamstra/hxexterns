// Generated by Haxe 3.4.7
if (process.version < "v04.0.0") console.warn("Module " + (typeof(module) == "undefined" ? "" : module.filename) + " requires node.js version 4.0.0 or higher");
(function () { "use strict";
var MainOnOffPushbutton = function() {
	var _gthis = this;
	console.log("start MainOnOffPushbutton.hx");
	this.led = new Gpio(4,"out");
	this.pushButton = new Gpio(17,"in","both");
	this.pushButton.watch(function(err,value) {
		if(err != null) {
			window.console.error("There was an error",err);
			return;
		}
		_gthis.led.writeSync(value);
	});
	process.on("SIGINT",$bind(this,this.unexportOnClose));
};
MainOnOffPushbutton.main = function() {
	var app = new MainOnOffPushbutton();
};
MainOnOffPushbutton.prototype = {
	unexportOnClose: function() {
		this.led.writeSync(0);
		this.led.unexport();
		this.pushButton.unexport();
	}
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
var js_node_buffer_Buffer = require("buffer").Buffer;
var Gpio = require("onoff").Gpio;
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
MainOnOffPushbutton.main();
})();
