// Generated by Haxe 4.0.2
(function ($global) { "use strict";
var MainOnOffBlink = function() {
	console.log("test/MainOnOffBlink.hx:18:","start MainOnOffBlink");
	this.led = new Gpio(4,"out");
	this.blinkInterval = setInterval($bind(this,this.blinkLED),250);
	setTimeout($bind(this,this.endBlink),5000);
};
MainOnOffBlink.main = function() {
	var app = new MainOnOffBlink();
};
MainOnOffBlink.prototype = {
	blinkLED: function() {
		if(this.led.readSync() == 0) {
			console.log("test/MainOnOffBlink.hx:27:","turn LED on");
			this.led.writeSync(1);
		} else {
			console.log("test/MainOnOffBlink.hx:30:","turn LED off");
			this.led.writeSync(0);
		}
	}
	,endBlink: function() {
		console.log("test/MainOnOffBlink.hx:36:","end blink");
		clearInterval(this.blinkInterval);
		this.led.writeSync(0);
		this.led.unexport();
	}
};
var Gpio = require("onoff").Gpio;
var $_;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
MainOnOffBlink.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
