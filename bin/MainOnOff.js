// Generated by Haxe 3.4.4
(function () { "use strict";
var MainOnOff = function() {
	this.init2();
};
MainOnOff.main = function() {
	var app = new MainOnOff();
};
MainOnOff.prototype = {
	init1: function() {
		var led = new Gpio(17,"out");
		var button = new Gpio(4,"in","both");
		button.watch(function(err,value) {
			if(err != null) {
				throw err;
			}
			led.writeSync(value);
		});
		process.on("SIGINT",function() {
			led.unexport();
			button.unexport();
		});
	}
	,init2: function() {
		var led = new Gpio(17,"out");
		var iv = new haxe_Timer(200);
		iv.run = function() {
			var tmp = led.readSync() ^ 1;
			led.writeSync(tmp);
		};
		haxe_Timer.delay(function() {
			iv.stop();
			led.writeSync(0);
			led.unexport();
		},5000);
	}
	,init3: function() {
		var led = new Gpio(17,"out");
	}
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
};
var Gpio = require("onoff").Gpio;
MainOnOff.main();
})();
