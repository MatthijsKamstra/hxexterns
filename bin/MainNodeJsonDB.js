// Generated by Haxe 4.0.2
(function ($global) { "use strict";
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var MainNodeJsonDB = function() {
	this.init0();
	this.init1();
	this.init2();
};
MainNodeJsonDB.main = function() {
	var app = new MainNodeJsonDB();
};
MainNodeJsonDB.prototype = {
	init0: function() {
		var db = new JsonDB("myDataBase",true,false);
		db.push("/test1","super test");
		db.push("/test2/my/test",5);
		db.push("/test3",{ test : "test", json : { test : ["test"]}});
		db.push("/test3",{ "new" : "cool", json : { important : 5}},false);
		db.push("/test2/my/test/",10,false);
		var data = db.getData("/");
		var data1 = db.getData("/test1");
		try {
			var data2 = db.getData("/test1/test/dont/work");
		} catch( error ) {
			console.error(((error) instanceof js__$Boot_HaxeError) ? error.val : error);
		}
		db.delete("/test1");
		db.save();
		db.reload();
	}
	,init1: function() {
		var db = new JsonDB("myDataBase",true,false);
		db.push("/arraytest/myarray[0]",{ obj : "test"},true);
		var testString = db.getData("/arraytest/myarray[0]/obj");
		db.delete("/arraytest/myarray[0]");
	}
	,init2: function() {
		var db = new JsonDB("myDataBase",true,false);
		db.push("/arraytest/myarray[]",{ obj : "test"},true);
		db.push("/arraytest/myarray[]/myTest","test",true);
	}
	,init3: function() {
		var db = new JsonDB("myDataBase",true,false);
		db.push("/arraytest/lastItemArray",[1,2,3],true);
		db.getData("/arraytest/lastItemArray[-1]");
		db.delete("/arraytest/lastItemArray[-1]");
		db.getData("/arraytest/lastItemArray[-1]");
	}
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
});
var JsonDB = require("node-json-db");
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
MainNodeJsonDB.main();
})({});
