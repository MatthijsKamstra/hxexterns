// Generated by Haxe 4.0.2
(function ($global) { "use strict";
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var MainFirebase = function() {
	this.imageUrl = "https://www.fake.nl/profile.png";
	this.email = "fake@morefake.nl";
	this.name = "MatthijsKamstra";
	this.postId = "bar";
	this.userId = "foo";
	this.init0();
	this.init1();
	this.init2();
	this.init3();
	this.init4();
	this.init7();
};
MainFirebase.__name__ = true;
MainFirebase.main = function() {
	var main = new MainFirebase();
};
MainFirebase.prototype = {
	init0: function() {
		var config = { apiKey : "api-key", authDomain : "domain.firebaseapp.com", databaseURL : "https://databaseurl.firebaseio.com", storageBucket : "bucket-id.appspot.com", messagingSenderId : "messaging-sender-id"};
		this.firebase = firebase.initializeApp(config);
	}
	,init1: function() {
		this.firebase.database().ref("test").set("wow").then(function(e) {
			console.log("test/MainFirebase.hx:42:","Set value!");
		});
	}
	,init2: function() {
		var database = firebase.database();
		this.firebase.database().ref("users/" + this.userId).set({ username : this.name, email : this.email, profile_picture : this.imageUrl});
	}
	,init3: function() {
		var starCountRef = this.firebase.database().ref("posts/" + this.postId + "/starCount");
		starCountRef.on("value",function(snapshot) {
			console.log("test/MainFirebase.hx:62:","updateStarCount(postElement, " + Std.string(snapshot.val()) + ")");
		});
		starCountRef.on("child_moved",function(snapshot1) {
			console.log("test/MainFirebase.hx:65:","test EventType.ChildMoved");
		});
	}
	,init4: function() {
		var userId = this.firebase.auth().currentUser.uid;
		return this.firebase.database().ref("/users/" + userId).once(null,null,"value").then(function(snapshot) {
		});
	}
	,init7: function() {
		this.firebase.database().ref("users/" + this.userId).set({ username : this.name, email : this.email, profile_picture : this.imageUrl},function(error) {
			if(error != null) {
				console.log("test/MainFirebase.hx:85:","The write failed...");
			} else {
				console.log("test/MainFirebase.hx:87:","Data saved successfully!");
			}
		});
	}
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g3 = 0;
			var _g11 = o.length;
			while(_g3 < _g11) {
				var i = _g3++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var firebase = require("firebase");
String.__name__ = true;
Array.__name__ = true;
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
js_Boot.__toStr = ({ }).toString;
MainFirebase.main();
})({});
